@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<head>
</head>
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item" id="manage-user">
        @if(User.Identity.Name.Length > 6)
            {
                <a  class="nav-link text-dark" id="dispay-user" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name.Substring(0,6)...</a>
            }
            else
            {
                <a  class="nav-link text-dark" id="dispay-user" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name.Substring(0,6)</a>
            }
        </li>
    <li class="nav-item" id="logout">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post" >
            <button  type="submit" class="nav-link btn text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
